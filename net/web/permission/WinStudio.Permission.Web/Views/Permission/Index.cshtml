@{
    ViewBag.Title = "Index";
}
@*<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.all-3.5.min.js"></script>*@
<link href="~/Scripts/thirdpart/ztree/css/demo.css" rel="stylesheet" />
<link href="~/Scripts/thirdpart/ztree/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
@*<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.core-3.5.min.js"></script>*@
<script src="~/Scripts/jquery-1.8.2.js"></script>
@*<script src="~/Scripts/thirdpart/ztree/js/jquery-1.4.4.min.js"></script>*@
<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.core-3.5.js"></script>
<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.excheck-3.5.js"></script>
<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.exedit-3.5.js"></script>
<script src="~/Scripts/thirdpart/ztree/js/jquery.ztree.exhide-3.5.js"></script>
<link href="~/Content/permissiontree/permission.css" rel="stylesheet" />
<script src="~/Scripts/jquery.form.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<h2>Index</h2>

<div>
    <div class="permissiontreeleft">
        <ul id="tree" class="ztree" style="width: 260px; overflow: auto;"></ul>
    </div>
    <div id="permissiontreecontainer" class="permissiontreeright"></div>
</div>

<div id="zTreeMenu">
    <ul>
        <li id="m_import_function" tag="permissiontreemenu" onclick="importFunction()">导入功能点</li>
        <li id="m_copy_function" tag="permissiontreemenu" onclick="copyFunction();">复制功能点</li>
        <li id="m_paste_function" tag="permissiontreemenu" onclick="pasteFunction();">黏贴功能点</li>
        <li id="m_delete_function" tag="permissiontreemenu" onclick="deleteFunction();">删除功能点</li>
    </ul>
</div>

<script>
    var zTreeObj, zTreeMenu;
    var permissioncontainer = $("#permissiontreecontainer");
    var setting = {
        check: {
            enable: true,
            chkStyle: "checkbox",
            nocheckInherit: true,
            chkDisabledInherit: true
        },
        data: {
            keep: {
                leaf: false
            },

            simpleData: {
                enable: true,
                idKey: "id",
                pIdKey: "pId",
                rootPId: 0,
                type: 0,
                ptype: -1,
                stype: -1,
                rpid: 0
            }
        },
        async: {
            enable: true,
            url: "/Permission/GetPermissionNodes",
            autoParam: ["id", "rpid", "type", "ptype", "stype"]
        },
        callback: {
            onClick: function () {
                var nodes = zTreeObj.getSelectedNodes();
                if (nodes.length > 0) {
                    LoadContent(permissioncontainer, "/Management/Index", nodes[0], function () { });
                }
            },
            onRightClick: function (event, treeId, treeNode) {
                if (!treeNode && event.target.tagName.toLowerCase() != "button" && $(event.target).parents("a").length == 0) {
                    zTreeObj.cancelSelectedNode();
                    showRMenu(treeNode, "root", event.pageX, event.pageY);
                } else if (treeNode && !treeNode.noR) {
                    zTreeObj.selectNode(treeNode);
                    showRMenu(treeNode, "node", event.pageX, event.pageY);
                }
            }
        }
    };

    zTreeNodes = [
        {
            id: 0,
            name: "权限树",
            open: true,
            rpid: 0,
            type: 0,
            ptype: 0,
            stype: 1,
            isParent: true,
            iconSkin: "rootnode"
        }
    ];
    function LoadContent(container, url, node, func) {
        $(container).empty();
        $(container).html("<img src='./Images/System/Loading.gif' />");
        $(container).load(url, node, func);
    }
    function showRMenu(node, type, x, y) {
        $("#zTreeMenu ul").show();
        $(zTreeMenu).find("li").hide();
        printnode(node);
        if (node.type == 1) {
            $(zTreeMenu).find("#m_import_function").show();
        }

        if (node.type == 0 && node.ptype == 1 && node.stype == 3) {// node.type == 3 || (node.type == 0 && node.stype == 3)) {
            $(zTreeMenu).find("#m_copy_function").show();
        }
        if ((node.type == 2 || (node.type == 0 && node.stype == 3 && node.ptype == 2)) && copiedFunctionNodes.length > 0) {
            $(zTreeMenu).find("#m_paste_function").show();
        }
        if (node.type == 5) $(zTreeMenu).find("#m_delete_function").show();

        zTreeMenu.css({ "top": y + "px", "left": x + "px", "visibility": "visible" });

        $("body").bind("mousedown", onBodyMouseDown);
    }
    function printnode(node) {
        console.log(node.id + "," + node.name + ",type=" + node.type + ",ptype=" + node.ptype + ",stype=" + node.stype);
    }
    function hideRMenu() {
        if (zTreeMenu) zTreeMenu.css({ "visibility": "hidden" });
        $("body").unbind("mousedown", onBodyMouseDown);
    }
    function onBodyMouseDown(event) {
        if (event.target.tagName != "LI" && $(event.target).attr("tag") != "permissiontreemenu")
            zTreeMenu.css({ "visibility": "hidden" });
    }
    var importFunction = function () {
        hideRMenu();
        var node = zTreeObj.getSelectedNodes()[0];
        LoadContent(permissioncontainer, "/Management/AutoInit", node);
    }
    var copiedFunctionNodes = new Array();
    var moduleID = 0;
    function copyFunction() {
        console.log('start copy');
        copiedFunctionNodes = new Array();
        moduleID = zTreeObj.getSelectedNodes()[0].rpid

        $.each(zTreeObj.getCheckedNodes(true), function (i, n) {
            if (n.type == 3 && n.ptype == 0) {
                copiedFunctionNodes.push(n);
            }
        })
        console.log(copiedFunctionNodes);
        hideRMenu();
    }
    function pasteFunction() {
        if (copiedFunctionNodes.length == 0) { alert("请选择需要复制的权限点！"); return; }
        if (zTreeObj.getSelectedNodes().length != 1) { alert("请选择需要黏贴的角色！"); return; }
        var node = zTreeObj.getSelectedNodes()[0];
        if (node.type != 2) { alert("暂只能黏贴到角色中！"); return; }
        $.post("/Management/CopyFunctions", { funcs: GetFunctionTreeString(copiedFunctionNodes), mid: moduleID, rid: node.id }, function (data) {
            if (data.ret) {
                moduleID = 0;
                copiedFunctionNodes = new Array();
                alert("权限复制成功！");
            } else
                alert(data.msg);
        });
        hideRMenu();
    }

    function deleteFunction() {
        if (zTreeObj.getSelectedNodes().length != 1) { alert("请选择需要删除的功能点！"); return; }
        var node = zTreeObj.getSelectedNodes()[0];
        $.post("/Management/DeleteRFunction", { id: node.id }, function (data) {
            alert(data.msg);
        });
    }

    function GetFunctionTreeString(funcs) {
        var ft = "";
        $.each(funcs, function (i, n) {
            console.log(n.children);
            if (ft.length > 0)
                ft += "|";
            ft += n.id;
            if (n.children != undefined)
                ft += "_" + GetFunctionChildrenTreeString(n.children);
            console.log(ft);
        });
        console.log(ft);
        return ft;
    }
    function GetFunctionChildrenTreeString(funcs) {
        if (funcs == undefined || funcs.length == 0) return "";
        var ft = "";
        var children = new Array();
        $.each(funcs, function (i, n) {
            if (n.checked) {
                if (ft.length > 0)
                    ft += '.';
                ft += n.id;
                if (n.children != undefined)
                    $.merge(children, n.children);
            }
        });
        var son = GetFunctionChildrenTreeString(children);
        if (son.length > 0)
            return ft += "_" + son;
        else return ft;
    }
    function ParseNode(node) {
        var data = { id: node.id, rpid: node.rpid, type: node.type, ptype: node.ptype, stype: node.stype };
        return data;
    }
    function GetAsyncUrl() {
        return "/Permission/GetPermissionNodes";
    }

    function bindMenuClick(menucontainer) {
        console.log('bind menu click');
        console.log($(menucontainer).find("#m_import_function"));
        $(menucontainer).find("#m_import_function").die().live("click", function () { console.log('click menu'); });
    }

    $(document).ready(function () {
        $.fn.zTree.init($("#tree"), setting, zTreeNodes);
        zTreeObj = $.fn.zTree.getZTreeObj("tree");
        zTreeMenu = $("#zTreeMenu");

        $(permissioncontainer).find(":submit").die().live("click", function () {
            $(this).parents("form").ajaxSubmit({
                url: $(this).attr("action"),
                type: "POST",
                success: function (data) { $(permissioncontainer).html(data); },
                completed: function () { console.log('completed'); }
            });
            return false;
        });
    });


</script>
